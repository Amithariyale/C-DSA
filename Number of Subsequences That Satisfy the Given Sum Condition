class Solution {
public:
    int  mod = 1e9 + 7;
    int numSubseq(vector<int>& nums, int target) {
       
        sort(nums.begin(), nums.end());
        int res = 0;
        int n = nums.size();
        int low = 0;
        int high = n - 1;
        vector<int> pows(n, 1);
        
        
        for (int i = 1 ; i < n ; ++i)
            pows[i] = pows[i - 1] * 2 % mod;
        
        while (low <= high) {
            if (nums[low] + nums[high] > target)
                high--;
            else
                res = (res + pows[high - low++]) % mod;
        }
        return res;
    }
};
