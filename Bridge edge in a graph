class Solution
{
	public:
    //Function to find if the given edge is a bridge in graph.
    int isBridge(int V, vector<int> adj[], int c, int d) 
    {
        // Code here
        
        int ans=0;
        vector<int>disc(V,-1);
        vector<int>low(V,-1);
        int parent=-1;
        unordered_map<int,bool>vis;
        int timer=0;
        for(int i=0;i<V;i++){
            if(!vis[i]){
                dfs(i,timer,ans,disc,low,vis,parent,adj,c,d);
            }
        }
        
        return ans;
    }
    
    void dfs(int node,int &timer,int &ans,vector<int>&disc,vector<int>&low,unordered_map<int,bool>&vis,int parent,vector<int>adj[],int c,int d){
        
        vis[node]=true;
        disc[node]=low[node]=timer++;
        
        for(auto i:adj[node]){
            
            if(i==parent)
                continue;
            
            if(!vis[i]){
                
                dfs(i,timer,ans,disc,low,vis,node,adj,c,d);
                low[node]=min(low[node],low[i]);
                
                if(low[i]>disc[node]){
                    if((node==c && i==d)||(node==d && i==c)){
                        ans=1;
                    }
                }
            }
            else{
                low[node]=min(low[node],disc[i]);
            }
        }
    }
};
