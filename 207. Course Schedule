class Solution {
public:
    bool canFinish(int numCourses, vector<vector<int>>& prerequisites) {
        
        vector<vector<int>>graph(numCourses);
        vector<int>indegree(numCourses,0);
        for(int i=0;i<prerequisites.size();i++){
            graph[prerequisites[i][1]].push_back(prerequisites[i][0]);
            indegree[prerequisites[i][0]]++;
        }

        queue<int>q;
        for(int i=0;i<numCourses;i++){
            if(indegree[i]==0)q.push(i);
        }

        while(!q.empty()){
            int node=q.front();
            q.pop();

            for(int x:graph[node]){
                indegree[x]--;
                if(indegree[x]==0)q.push(x);
            }
        }

        for(int i=0;i<numCourses;i++){
            if(indegree[i]!=0)return false;
        }
        return true;
    }
};
