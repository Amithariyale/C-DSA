/*Complete the function below
Node is as follows
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
};
*/

class Solution{
    private:
    void solve(Node* root,vector<int>&inorder){
        if(root==NULL){
            return;
        }
        
        solve(root->left,inorder);
        inorder.push_back(root->data);
        solve(root->right,inorder);
    }
  public:
    // root : the root Node of the given BST
    // target : the target sum
    int isPairPresent(struct Node *root, int target)
    {
    //add code here.
        vector<int>inorder;
        solve(root,inorder);
        
        int i=0;
        int j=inorder.size()-1;
        
        while(i<j){
            if(inorder[i]+inorder[j]==target){
                return 1;
            }
            else if(inorder[i]+inorder[j]>target){
                j--;
            }
            else{
                i++;
            }
        }
        return 0;
    }
};
