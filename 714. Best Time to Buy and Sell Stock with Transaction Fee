class Solution {
public:
    int solve(int i,int turn,vector<int>&prices,int fee,vector<vector<int>>&dp){
        if(i==prices.size())return 0;
        if(dp[i][turn]!=-1)return dp[i][turn];

        int ans=0;
        if(!turn){
            int buy=solve(i+1,1,prices,fee,dp)-prices[i];
            int noBuy=solve(i+1,0,prices,fee,dp);

            ans=max(buy,noBuy);
        }
        else{
            int sell=(prices[i]-fee)+solve(i+1,0,prices,fee,dp);
            int noSell=solve(i+1,1,prices,fee,dp);

            ans=max(sell,noSell);
        }

        return dp[i][turn]=ans;
    }
    int maxProfit(vector<int>& prices, int fee) {
        
        vector<vector<int>>dp(prices.size(),vector<int>(2,-1));

        return solve(0,0,prices,fee,dp);
    }
};
