// User function Template for C++

class Solution {
  public:
    /*  Function to implement Bellman Ford
    *   edges: vector of vectors which represents the graph
    *   S: source vertex to start traversing graph with
    *   V: number of vertices
    */
    vector<int> bellman_ford(int V, vector<vector<int>>& edges, int S) {
        // Code here
        
        vector<int>dis(V,1e8);
        dis[S]=0;
        
        for(int i=0;i<V;i++){
            
            for(auto it:edges){
                int u=it[0];
                int v=it[1];
                int wt=it[2];
                
                if(dis[u]!=1e8 && (dis[u]+wt<dis[v])){
                    dis[v]=dis[u]+wt;
                }
            }
        }
        
        bool flag=false;
        for(auto it:edges){
                int u=it[0];
                int v=it[1];
                int wt=it[2];
                
                if(dis[u]!=1e8 && (dis[u]+wt<dis[v])){
                    flag=true;
                }
        }
        
        if(flag){
            
            vector<int> temp;
            temp.push_back(-1);
            return temp;
        }
        
        return dis;
    }
};
