//User function template for C++

class Solution {
  public:
    //Function to return a list of indexes denoting the required 
    //combinations whose sum is equal to given number.
    vector<vector<int> > combinationSum(vector<int> &A, int B) {
        // Your code here
       
        
        sort(A.begin(),A.end());
        
        vector<int>a;
        
        a.push_back(A[0]);
        
        for(int i=1;i<A.size();i++){
            if(a.back()!=A[i]){
                a.push_back(A[i]);
            }
        }
        vector<vector<int>>ans;
        
        vector<int>temp;
        
        solve(a,ans,B,temp,0);
        
        return ans;
    }
    
    void solve(vector<int>&a,vector<vector<int>>&ans,int target,vector<int>temp,int i){
        
        if(target==0){
            ans.push_back(temp);
            return ;
        }
        if(target<0){
            return;
        }
        
        while(i<a.size()){
            temp.push_back(a[i]);
            solve(a,ans,target-a[i],temp,i);
            temp.pop_back();
            i++;
        }
    }
};
