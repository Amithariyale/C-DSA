class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        
        int n=grid.size();
        int m=grid[0].size();

        vector<vector<int>>dp(n,vector<int>(m,-1));

        int i=0;
        int j=0;

        int ans=solve(grid,n,m,i,j,dp);

        return ans;
    }

    int solve(vector<vector<int>>&grid,int n,int m,int i,int j,vector<vector<int>>&dp){
        if(i==n-1 && j==m-1){
            return grid[i][j];
        }

        if(dp[i][j]!=-1){
            return dp[i][j];
        }
        int ans1=INT_MAX;
        if(isPossible(i,j+1,n,m)){
            ans1=solve(grid,n,m,i,j+1,dp);
        }

        int ans2=INT_MAX;
        if(isPossible(i+1,j,n,m)){
            ans2=solve(grid,n,m,i+1,j,dp);
        }

        dp[i][j]=min(ans1,ans2)+grid[i][j];
        return dp[i][j];
    }

    bool isPossible(int i,int j,int n,int m){
        if(i<n && j<m)return true;
        return false;
    }
};





