

// Function to delete a node from BST.
Node* mini(Node* root){
    Node* temp=root;
    while(temp->left!=NULL){
        temp=temp->left;
    }
    return temp;
}
Node *deleteNode(Node *root, int X) {
    // your code goes here
    if(root==NULL)
        return root;
        
    if(root->data==X){
        if(root->left==NULL && root->right==NULL){
            delete root;
            return NULL;
        }
        if(root->left!=NULL && root->right==NULL){
            Node* temp=root->left;
            delete root;
            return temp;
        }
        if(root->left==NULL && root->right!=NULL){
            Node* temp=root->right;
            delete root;
            return temp;
        }
        if(root->left!=NULL && root->right!=NULL){
            int data=mini(root->right)->data;
            root->data=data;
            root->right=deleteNode(root->right,data);
            return root;
        }
    }
    else if(root->data>X){
        root->left=deleteNode(root->left,X);
        return root;
    }
    else{
        root->right=deleteNode(root->right,X);
        return root;
    }
}
