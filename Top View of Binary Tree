/*
struct Node
{
    int data;
    Node* left;
    Node* right;
};
*/
class Solution
{
    public:
    //Function to return a list of nodes visible from the top view 
    //from left to right in Binary Tree.
    vector<int> topView(Node *root)
    {
        //Your code here
        vector<int>ans;
        map<int,int>node;
        queue<pair<Node*,int> >q;
        
        q.push(make_pair(root,0));
        
        while(!q.empty()){
            pair<Node*,int>temp=q.front();
            q.pop();
            
            Node* top=temp.first;
            int hd=temp.second;
            
            if(node.find(hd)==node.end()){
                node[hd]=top->data;
            }
            if(top->left){
                q.push(make_pair(top->left,hd-1));
            }
            if(top->right){
                q.push(make_pair(top->right,hd+1));
            }
        }
        for(auto i:node){
            ans.push_back(i.second);
        }
        return ans;
    }
    

};

