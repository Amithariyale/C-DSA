// User function Template for C++

class Solution {
  public:
    int shortestDistance(int N, int M, vector<vector<int>> A, int X, int Y) {
        // code here
        
        if(A[0][0]==0)return -1;
        
        vector<vector<int>>vis(N,vector<int>(M,0));
        
        queue<pair<int,int>>q;
        
        q.push({0,0});
        
        vis[0][0]=1;
        
        int dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};
        
        int ans=0;
        
        while(!q.empty()){
            
            int n=q.size();
            
            for(int i=0;i<n;i++){
                auto it=q.front();
                q.pop();
                
                for(int j=0;j<4;j++){
                    int x=it.first+dir[j][0];
                    int y=it.second+dir[j][1];
                    
                    if(valid(x,y,N,M,vis,A)){
                        q.push({x,y});
                        vis[x][y]=1;
                    }
                }
                if(it.first==X && it.second==Y){
                    return ans;
                }
                
            }
            ans++;
            
        }
        
        return -1;
    }
    
    bool valid(int x,int y,int n,int m,vector<vector<int>>&vis, vector<vector<int>>&A){
        
        return (x>=0 && x<n && y>=0 && y<m && !vis[x][y] && A[x][y]==1);
    }
};
