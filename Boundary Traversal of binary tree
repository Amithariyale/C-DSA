/* A binary tree Node
struct Node
{
    int data;
    Node* left, * right;
}; */

class Solution {
private:
    void tleft(Node* root,vector<int>& ans){
        if(root==NULL ||root->left==NULL && root->right==NULL){
            return ;
        }
        
        ans.push_back(root->data);
        
        if(root->left)
            tleft(root->left,ans);
        else
            tleft(root->right,ans);
    }
    
    void tleaf(Node* root,vector<int>& ans){
        if(root==NULL){
            return;
        }
        if(root->left==NULL && root->right==NULL){
            ans.push_back(root->data);
            return ;
        }
        
        if(root->left)
            tleaf(root->left,ans);
            
        if(root->right)
            tleaf(root->right,ans);
            
    }
    
    void tright(Node* root,vector<int>& ans){
        if(root==NULL || root->left==NULL && root->right==NULL){
            return;
        }
        
        if(root->right)
            tright(root->right,ans);
            
        else
            tright(root->left,ans);
            
        ans.push_back(root->data);
    }
public:
    vector <int> boundary(Node *root)
    {
        //Your code here
        vector<int>ans;
        
        ans.push_back(root->data);
        tleft(root->left,ans);
        
        tleaf(root->left,ans);
        if(root->right){
            tleaf(root->right,ans);
        
            tright(root->right,ans);
        }
        return ans;
    }
};
