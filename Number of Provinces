class Solution {
public:
    void dfs(int i,vector<vector<int>>&graph,vector<int>&vis){
        vis[i]=1;
        
        for(auto x:graph[i]){
            if(!vis[x]){
                dfs(x,graph,vis);
            }
        }
    }
    int findCircleNum(vector<vector<int>>& isConnected) {
        
        int n=isConnected.size();
        vector<int>vis(n,0);

        vector<vector<int>>graph(n);
        for(int i=0;i<n;i++){
            for(int j=0;j<n;j++){
                if(isConnected[i][j] && i!=j){
                    graph[i].push_back(j);
                }
            }
        }
        int ans=0;

        for(int i=0;i<n;i++){
           
            if(!vis[i]){
                ans++;
                dfs(i,graph,vis);
            }
        }

        return ans;
    }
};
