class Solution
{
	public:
	//Function to return list containing vertices in Topological order. 
	vector<int> topoSort(int V, vector<int> adj[]) 
	{
	    // code here
	    unordered_map<int,bool>visited;
	    stack<int>s;
	    
	    for(int i=0;i<V;i++){
	        if(!visited[i]){
	            dfsSort(i,visited,s,adj);
	        }
	    }
	    
	    vector<int>ans;
	    while(!s.empty()){
	        int top=s.top();
	        s.pop();
	        
	        ans.push_back(top);
	    }
	    return ans;
	}
	
	void dfsSort(int i,unordered_map<int,bool>&visited,stack<int>&s,vector<int> adj[]){
	    visited[i]=true;
	    
	    for(auto j:adj[i]){
	        if(!visited[j]){
	            dfsSort(j,visited,s,adj);
	        }
	    }
	    
	    s.push(i);
	}
};
