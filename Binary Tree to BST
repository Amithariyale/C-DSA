//User function template for C++

/* The Node structure is
struct Node
{
    int data;
    struct Node *left;
    struct Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
}; 
*/

class Solution{
  private:
    Node* solve(vector<int>v,int low,int high){
        if(low>high){
            return NULL;
        }
        int mid=(low+high)/2;
        
        Node* root=new Node(v[mid]);
        
        root->left=solve(v,low,mid-1);
        
        root->right=solve(v,mid+1,high);
        
        return root;
    }
  public:
    // The given root is the root of the Binary Tree
    // Return the root of the generated BST
    Node *binaryTreeToBST (Node *root)
    {
        //Your code goes here
        vector<int>v;
        queue<Node*>q;
        q.push(root);
        
        while(!q.empty()){
            Node* temp=q.front();
            q.pop();
            
            if(temp->left)q.push(temp->left);
            if(temp->right)q.push(temp->right);
            v.push_back(temp->data);
        }
        sort(v.begin(),v.end());
        
        return solve(v,0,v.size()-1);
    }
};
