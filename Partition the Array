//User function Template for C++
class Solution
{
public:
    int binarysearch(vector<long long>&arr,int low,int high,long long sum,long long pre){
        
        int idx=-1;
        long long first,second,diff=INT_MAX;
        
        while(low<=high){
            int mid=(low+high)/2;
            first=arr[mid]-pre;
            second=sum-arr[mid];
            
            if(abs(first-second)<diff){
                idx=mid;
                diff=abs(first-second);
            }
            if(first<second)low=mid+1;
            else high=mid-1;
        }
        
        return idx;
    }
    long long minDifference(int N, vector<int> &A) {
        // code here
       vector<long long>presum(N,0);
       presum[0]=A[0];
       for(int i=1;i<N;i++){
           presum[i]=presum[i-1]+A[i];
       }
       
       long long ans=INT_MAX,w,x,y,z;
       
       for(int i=2;i<N-1;i++){
           int idx=binarysearch(presum,0,i-1,presum[i-1],0);
           w=presum[idx];
           x=presum[i-1]-w;
           
           idx=binarysearch(presum,i,N-1,presum[N-1],presum[i-1]);
           y=presum[idx]-presum[i-1];
           z=presum[N-1]-presum[idx];
           
           ans=min(ans,max({w,x,y,z})-min({w,x,y,z}));
           
       }
       
       return ans;
       
    }
};
