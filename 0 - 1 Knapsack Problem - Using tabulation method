class Solution
{
    public:
    //Function to return max value that can be put in knapsack of capacity W.
    int knapSack(int W, int wt[], int val[], int n) 
    { 
       // Your code here
       vector<vector<int>>dp(n,vector<int>(W+1,0));
       
        for(int w=wt[0];w<=W;w++){
            if(wt[0]<=W){
                dp[0][w]=val[0];
            }
            else{
                dp[0][w]=0;
            }
        }
       
       
       for(int i=1;i<n;i++){
           for(int w=0;w<=W;w++){
                int incl=0;
                if(wt[i]<=w){
                    incl=dp[i-1][w-wt[i]]+val[i];
                }
                int excl=dp[i-1][w];
           
                dp[i][w]=max(incl,excl);
           }
       }
       
       return dp[n-1][W];
    }
};
