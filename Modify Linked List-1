/*Complete the function below
Node is as follows:
struct Node
{
    int data;
    struct Node* next;
    
    Node(int x){
        data = x;
        next = NULL;
    }
    
};
*/
class Solution{
    public:
    int findLen(Node* head){
        int len=0;
        Node* temp=head;
        
        while(temp!=NULL){
            len++;
            temp=temp->next;
        }
        
        return len;
    }
    
    Node* reverse(Node* head){
        Node* curr=head;
        Node* prev=NULL;
        Node* next=NULL;
        
        while(curr!=NULL){
            next=curr->next;
            curr->next=prev;
            prev=curr;
            curr=next;
        }
        
        return prev;
    }
    struct Node* modifyTheList(struct Node *head)
    {
        //add code here.
        int len=findLen(head);
        
        head=reverse(head);
        
        Node* temp=head;
        
        int i=1;
        while(i<len/2){
            temp=temp->next;
            i++;
        }
        
        temp->next=reverse(temp->next);
        
        Node* temp1=head;
        Node* temp2=temp->next;
        
        i=0;
        
        while(i<len/2){
           temp1->data=temp1->data-temp2->data;
           
           temp1=temp1->next;
           temp2=temp2->next;
           i++;
        }
        
        temp->next=reverse(temp->next);
        
        return head;
    }
};
