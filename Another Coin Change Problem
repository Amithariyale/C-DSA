class Solution {
  public:
    bool makeChanges(int N, int K, int target, vector<int> &coins) {
        // code here
        vector<vector<vector<int>>>dp(N+1,vector<vector<int>>(K+1,vector<int>(target+1,-1)));
        return solve(0,K,target,coins,dp);
    }
    
    int solve(int i,int k,int target,vector<int>&coins,vector<vector<vector<int>>>&dp){
        if(k==0){
            return target==0?1:0;
        }
        
        if(target<0)return 0;
        
        if(i>=coins.size())return 0;
        
        if(dp[i][k][target]!=-1)return dp[i][k][target];
        
        int take=solve(i,k-1,target-coins[i],coins,dp);
        
        int noTake=solve(i+1,k,target,coins,dp);
        
        return dp[i][k][target]=(take||noTake);
    }
};
