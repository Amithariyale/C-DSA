class Solution {
public:
    int numEnclaves(vector<vector<int>>& grid) {
        
        int n=grid.size();
        int m=grid[0].size();

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(i==0 || j==0 || i==n-1 || j==m-1){
                    dfs(i,j,grid);
                }
            }
        }

        int ans=0;

        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(grid[i][j]==1){
                    ans++;
                }
            }
        }

        return ans;
    }

    void dfs(int i,int j,vector<vector<int>>&grid){
        if(i>=grid.size() || j>=grid[0].size() || grid[i][j]==0)return;

        grid[i][j]=0;

        int dir[4][2]={{0,1},{1,0},{0,-1},{-1,0}};

        for(auto it:dir){
            int x=i+it[0];
            int y=j+it[1];

            dfs(x,y,grid);
        }
    }
};
