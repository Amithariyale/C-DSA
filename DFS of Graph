class Solution {
  public:
    // Function to return a list containing the DFS traversal of the graph.
    vector<int> dfsOfGraph(int V, vector<int> adj[]) {
        // Code here
        
        unordered_map<int,bool>visited;
        vector<int>ans;
        
        dfs(0,ans,visited,adj);
        
        return ans;
    }
    
    void dfs(int i,vector<int>&ans, unordered_map<int,bool>&visited,vector<int>adj[]){
        
        if(visited[i]==1){
            return;
        }
        if(visited[i]==0){
            ans.push_back(i);
            visited[i]=1;
        }
        
        for(int j=0;j<adj[i].size();j++){
            dfs(adj[i][j],ans,visited,adj);
        }
        
    }
};
