/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int solve(TreeNode* root,int x){
        if(root==NULL){
            return 0;
        }
        if(root->val==0){
            return 0;
        }
        int ans=0;
        if(x<0){
            ans=solve(root->right,1)+1;
        }
        else if(x>0){
            ans=solve(root->left,-1)+1;
        }

        root->val=0;
        return ans;
    }
    int longestZigZag(TreeNode* root) {
        
        queue<TreeNode*>q;
        q.push(root);
       
        int ans=0;
        while(!q.empty()){
            TreeNode* temp=q.front();
            q.pop();

            int left=solve(temp->left,-1);
            int right=solve(temp->right,1);

            ans=max(ans,max(left,right));

            if(temp->left){
                q.push(temp->left);
            }
            if(temp->right){
                q.push(temp->right);
            }
        }

        return ans;
    }
};
