class Solution {
  public:
    int solve(int i,int j,string s,string t,vector<vector<int>>&dp){
        if(i==s.size())return t.size()-j;
        if(j==t.size())return s.size()-i;
        // if(i==s.size() || j==t.size())return INT_MAX;
        if(dp[i][j]!=-1)return dp[i][j];
        
        if(s[i]!=t[j]){
            int takeS=1+solve(i+1,j,s,t,dp);
            
            int takeT=1+solve(i,j+1,s,t,dp);
            
            int takeBoth=1+solve(i+1,j+1,s,t,dp);
            
            dp[i][j]=min(takeS,min(takeT,takeBoth));
        }
        else{
            dp[i][j]=solve(i+1,j+1,s,t,dp);
        }
        
        return dp[i][j];
    }
    
    int editDistance(string s, string t) {
        // Code here
        vector<vector<int>>dp(s.length(),vector<int>(t.length(),-1));
        
        return solve(0,0,s,t,dp);
    }
};
