class Solution
{
    private:
    vector<long long int> nextSmaller(long long arr[],int n){
        
        vector<long long int>ans(n);
        stack<long long int>s;
        s.push(-1);
        for(long long int i=n-1;i>=0;i--){
            while(s.top()!=-1 && arr[s.top()]>=arr[i]){
                s.pop();
            }
            ans[i]=s.top();
            s.push(i);
        }
        return ans;
    }
    vector<long long int> prevSmaller(long long arr[],int n){
        
        vector<long long int>ans(n);
        stack<long long int>s;
        s.push(-1);
        for(long long int i=0;i<n;i++){
            while(s.top()!=-1 && arr[s.top()]>=arr[i]){
                s.pop();
            }
            ans[i]=s.top();
            s.push(i);
        }
        return ans;
    }
    public:
    //Function to find largest rectangular area possible in a given histogram.
    long long getMaxArea(long long arr[], int n)
    {
        // Your code here
        long long int area=INT_MIN;
        vector<long long int>next(n);
        next=nextSmaller(arr,n);
        
        vector<long long int>prev(n);
        prev=prevSmaller(arr,n);
        
        for(long long int i=0;i<n;i++){
            long long int a=arr[i];
            if(next[i]==-1){
                next[i]=n;
            }
            long long int b=next[i]-prev[i]-1;
            long long int newArea=a*b;
            area=max(area,newArea);
        }
        return area;
    }
};
