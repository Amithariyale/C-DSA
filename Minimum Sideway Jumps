class Solution {
public:
    int solve(vector<int>&obs,int lane,int pose,vector<vector<int>>&dp){
        int n=obs.size()-1;
        if(pose==n){
            return 0;
        }
        if(dp[lane][pose]!=-1){
            return dp[lane][pose];
        }

        if(obs[pose+1]!=lane){
            return solve(obs,lane,pose+1,dp);
        }
        else{
            int ans=INT_MAX;
            for(int i=1;i<=3;i++){
                if(lane!=i && obs[pose]!=i){
                    ans=min(ans,1+solve(obs,i,pose,dp));
                }
            }
            dp[lane][pose]=ans;
            return dp[lane][pose];
        }

    }
    int minSideJumps(vector<int>& obstacles) {
        int n=obstacles.size();
        vector<vector<int>>dp(4,vector<int>(n,-1));
        return solve(obstacles,2,0,dp);
    }
};
