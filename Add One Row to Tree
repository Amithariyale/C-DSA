/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    TreeNode* addOneRow(TreeNode* root, int val, int depth) {
        if(depth==1){
            TreeNode* temp=new TreeNode(val);
            temp->left=root;
            root=temp;
            return root;
        }

        root=solve(root,val,depth,1,0);

        return root;
    }

    TreeNode* solve(TreeNode* root,int val,int depth,int curD,int side){
        if(root==NULL){
            if(curD==depth){
                TreeNode* temp=new TreeNode(val);
                root=temp;
            }
            return root;
        }

        if(curD==depth){
            if(side>0){
                TreeNode* temp=new TreeNode(val);
                temp->right=root;
                root=temp;
            }
            else{
                TreeNode* temp=new TreeNode(val);
                temp->left=root;
                root=temp;
            }
            return root;
        }

        root->left=solve(root->left,val,depth,curD+1,-1);

        root->right=solve(root->right,val,depth,curD+1,1);

        return root;
    }
};
